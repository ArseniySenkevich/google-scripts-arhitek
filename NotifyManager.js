function notifyAssignedManager(managerName, leadData) {
  const TELEGRAM_BOT_TOKEN = BOT_TOKEN;; // ‚Üê –£–∫–∞–∂–∏ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ Telegram-–±–æ—Ç–∞
  const SHEET_NAME = '–û—á–µ—Ä–µ–¥—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤';         // ‚Üê –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏
  const MANAGER_COLUMN = 2;                        // –ö–æ–ª–æ–Ω–∫–∞  (–ú–µ–Ω–µ–¥–∂–µ—Ä)
  const TELEGRAM_ID_COLUMN = 5;                    // –ö–æ–ª–æ–Ω–∫–∞  (Telegram ID)

  const sheet = SpreadsheetApp.getActive().getSheetByName(SHEET_NAME);
  const data = sheet.getDataRange().getValues();

  let telegramId = null;

  for (let i = 1; i < data.length; i++) {
    if (data[i][MANAGER_COLUMN] === managerName) {
      telegramId = data[i][TELEGRAM_ID_COLUMN];
      break;
    }
  }

  if (!telegramId) {
    Logger.log("‚ùå Telegram ID –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞: " + managerName);
    return;
  }

  const message = `
üì• <b>–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–æ–≤—ã–π –ª–∏–¥!</b>

üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> ${leadData.name || '-'}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${leadData.phone || '-'}
üìç <b>–†–µ–≥–∏–æ–Ω:</b> ${leadData.region || '-'}
üè† <b>–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞:</b> ${leadData.type || '-'}
üìù <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ${leadData.comment || '-'}

üîó <a href="https://arkhitek.bitrix24.ru/crm/lead/details/${leadData.bitrixId}/">–û—Ç–∫—Ä—ã—Ç—å –≤ Bitrix24</a>
  `.trim();

  const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
  const payload = {
    chat_id: telegramId,
    text: message,
    parse_mode: 'HTML'
  };

  UrlFetchApp.fetch(url, {
    method: 'post',
    contentType: 'application/json',
    payload: JSON.stringify(payload)
  });
}
function fetchLeadInfo(leadId) {
  const BASE_URL = 'https://arkhitek.bitrix24.ru/rest/29613/d4q1d0bb0oitzo21/crm.lead.get.json';
  const url = `${BASE_URL}?id=${leadId}`;

  Logger.log(`üîó Bitrix API call: ${url}`);

  try {
    const response = UrlFetchApp.fetch(url);
    const text = response.getContentText();
    Logger.log(`üì® –û—Ç–≤–µ—Ç Bitrix: ${text}`);

    const data = JSON.parse(text);
    if (!data || !data.result) return null;

    const lead = data.result;

    const name = [lead.LAST_NAME, lead.NAME, lead.SECOND_NAME].filter(Boolean).join(' ').trim() || lead.TITLE || '';
    const phone = (lead.PHONE && lead.PHONE[0]?.VALUE) || '‚Äî';

    // –£–¥–∞–ª—è–µ–º BB-–∫–æ–¥—ã —Ç–∏–ø–∞ [p]...[/p]
    const commentRaw = lead.COMMENTS || '';
    const comment = commentRaw.replace(/\[\/?p\]/g, '').trim();

    return { name, phone, comment };
  } catch (e) {
    Logger.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª–∏–¥–∞ #${leadId} –∏–∑ Bitrix: ${e.message}`);
    return null;
  }
}
function notifyAssignedManager(managerName, leadData) {
  const SHEET_NAME = '–û—á–µ—Ä–µ–¥—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤';
  const MANAGER_COLUMN = 1; // –∫–æ–ª–æ–Ω–∫–∞ B
  const TELEGRAM_ID_COLUMN = 4; // –∫–æ–ª–æ–Ω–∫–∞ E

  const sheet = SpreadsheetApp.getActive().getSheetByName(SHEET_NAME);
  const data = sheet.getDataRange().getValues();

  let telegramId = null;

  for (let i = 1; i < data.length; i++) {
    const name = (data[i][MANAGER_COLUMN] || '').toString().trim();
    if (name === managerName) {
      telegramId = data[i][TELEGRAM_ID_COLUMN];
      Logger.log(`üì¨ –ù–∞–π–¥–µ–Ω Telegram ID: ${telegramId} –¥–ª—è ${managerName}`);
      break;
    }
  }

  if (!telegramId) {
    Logger.log(`‚ùå Telegram ID –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞: ${managerName}`);
    return;
  }

  const message = `
üì• <b>–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–æ–≤—ã–π –ª–∏–¥!</b>

üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> ${leadData.name || '‚Äî'}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${leadData.phone || '‚Äî'}
üìç <b>–†–µ–≥–∏–æ–Ω:</b> ${leadData.region || '‚Äî'}
üè† <b>–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞:</b> ${leadData.type || '‚Äî'}
üìù <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ${leadData.comment || '‚Äî'}

üîó <a href="https://arkhitek.bitrix24.ru/crm/lead/details/${leadData.bitrixId}/">–û—Ç–∫—Ä—ã—Ç—å –≤ Bitrix24</a>
`.trim();

  const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
  const payload = {
    chat_id: telegramId,
    text: message,
    parse_mode: 'HTML'
  };

  try {
    const res = UrlFetchApp.fetch(url, {
      method: 'post',
      contentType: 'application/json',
      payload: JSON.stringify(payload)
    });

    Logger.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É ${managerName}`);
  } catch (e) {
    Logger.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É ${managerName}: ${e.message}`);
  }
}


