function returnLeadToCallCenter(leadId, returnerTelegramId, reason) {
  const sheetManagers = SpreadsheetApp.getActive().getSheetByName('–û—á–µ—Ä–µ–¥—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤');
  let sheetReturns = SpreadsheetApp.getActive().getSheetByName('–í–æ–∑–≤—Ä–∞—Ç—ã –ª–∏–¥–æ–≤');
  if (!sheetReturns) {
    sheetReturns = SpreadsheetApp.getActive().insertSheet('–í–æ–∑–≤—Ä–∞—Ç—ã –ª–∏–¥–æ–≤');
    sheetReturns.appendRow(['ID –ª–∏–¥–∞', '–°—Å—ã–ª–∫–∞', '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π', '–ö—Ç–æ –≤–µ—Ä–Ω—É–ª', '–ö–æ–º—É –ø–µ—Ä–µ–¥–∞–Ω–æ', '–ü—Ä–∏—á–∏–Ω–∞', '–î–∞—Ç–∞']);
  }

  const sheetLog = SpreadsheetApp.getActive().getSheetByName('–õ–æ–≥–û—à–∏–±–æ–∫');
  const sheetAssign = SpreadsheetApp.getActive().getSheetByName('–û—á–µ—Ä–µ–¥–Ω–æ—Å—Ç—å –∏ –ø–µ—Ä–µ–¥–∞—á–∞');
  const sheetArchive = SpreadsheetApp.getActive().getSheetByName('–ê—Ä—Ö–∏–≤_–û—á–µ—Ä–µ–¥–Ω–æ—Å—Ç—å –∏ –ø–µ—Ä–µ–¥–∞—á–∞');
  const sheetStaff = SpreadsheetApp.getActive().getSheetByName('–ö–æ–ª–ª-—Ü–µ–Ω—Ç—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏');

  function debugLog(msg) {
    sheetLog.appendRow([new Date(), `üü° DEBUG: ${msg}`]);
  }

  try {
    debugLog(`‚ñ∂ –°—Ç–∞—Ä—Ç –≤–æ–∑–≤—Ä–∞—Ç–∞ –ª–∏–¥–∞ #${leadId}`);

    // üîπ –ö—Ç–æ –≤–µ—Ä–Ω—É–ª
    const managers = sheetManagers.getDataRange().getValues();
    let returnerName = null;
    let returnerBitrixId = null;

    for (let i = 1; i < managers.length; i++) {
      if (managers[i][5] == returnerTelegramId) {
        returnerName = managers[i][1];
        returnerBitrixId = managers[i][0];
        break;
      }
    }

    if (!returnerBitrixId) {
      debugLog(`‚õî –ù–µ –Ω–∞–π–¥–µ–Ω Telegram ID –≤ –û—á–µ—Ä–µ–¥—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤`);
      return false;
    }

    debugLog(`–ú–µ–Ω–µ–¥–∂–µ—Ä-–≤–æ–∑–≤—Ä–∞—Ç—á–∏–∫: ${returnerName} (Bitrix ID: ${returnerBitrixId})`);

    // üîπ –ü–æ–ª—É—á–∞–µ–º –ª–∏–¥
    const leadResp = callBitrixMethod('crm.lead.get', { id: leadId });
    debugLog(`üì° –û—Ç–≤–µ—Ç Bitrix (crm.lead.get): ${JSON.stringify(leadResp)}`);

    if (!leadResp || !leadResp.result) {
      debugLog(`‚õî –õ–∏–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return false;
    }

    const lead = leadResp.result;
    const assignedId = lead.ASSIGNED_BY_ID;
    debugLog(`üë§ –¢–µ–∫—É—â–∏–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –≤ Bitrix: ${assignedId}`);

    if (String(assignedId) !== String(returnerBitrixId)) {
      debugLog(`‚õî –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–æ –ª–∏–¥—É`);
      return false;
    }

    // üîπ –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–¥–µ–ª–∫—É
    const contactId = lead.CONTACT_ID;
    if (contactId) {
      const dealsResp = callBitrixMethod('crm.deal.list', {
        filter: { CONTACT_ID: contactId },
        select: ['ID'],
        order: { DATE_CREATE: 'DESC' }
      });
      debugLog(`üì° –û—Ç–≤–µ—Ç Bitrix (crm.deal.list): ${JSON.stringify(dealsResp)}`);

      const dealId = dealsResp?.result?.[0]?.ID;
      if (dealId) {
        const delResp = callBitrixMethod('crm.deal.delete', { id: dealId });
        debugLog(`üóë –£–¥–∞–ª–µ–Ω–∞ —Å–¥–µ–ª–∫–∞ #${dealId}, –æ—Ç–≤–µ—Ç: ${JSON.stringify(delResp)}`);
      } else {
        debugLog(`‚ÑπÔ∏è –°–¥–µ–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      }
    }

    // üîπ –ò—â–µ–º –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    const link = `/${leadId}/`;
    const rowsAssign = sheetAssign.getDataRange().getValues();
    const rowsArchive = sheetArchive ? sheetArchive.getDataRange().getValues() : [];
    const allRows = rowsAssign.concat(rowsArchive);

    let ccManagerName = null;
    for (let i = 1; i < allRows.length; i++) {
      if ((allRows[i][7] || '').includes(link)) {
        ccManagerName = allRows[i][4];
        break;
      }
    }

    if (!ccManagerName) {
      debugLog(`‚õî –ò—Å—Ö–æ–¥–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return false;
    }

    debugLog(`üîé –ò—Å—Ö–æ–¥–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä (—Å–æ–∫—Ä.): ${ccManagerName}`);

    // üîπ –ò—â–µ–º Bitrix ID –∏ Telegram ID –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
const staff = sheetStaff.getDataRange().getValues();
let ccManagerBitrixId = null;
let ccManagerTelegramId = null;

for (let i = 1; i < staff.length; i++) {
  const fullName = (staff[i][2] || '').trim();
  if (fullName.includes(ccManagerName.trim())) {
    ccManagerBitrixId = staff[i][0]; // A-–∫–æ–ª–æ–Ω–∫–∞: Bitrix ID
    ccManagerTelegramId = staff[i][1]; // B-–∫–æ–ª–æ–Ω–∫–∞: Telegram ID
    break;
  }
}
if (!ccManagerTelegramId) {
  debugLog(`‚õî –ù–µ –Ω–∞–π–¥–µ–Ω Telegram ID –¥–ª—è ${ccManagerName}`);
} else {
  debugLog(`üì≤ Telegram ID –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: ${ccManagerTelegramId}`);
}

    // üîπ –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–¥
    const updateResp = callBitrixMethod('crm.lead.update', {
      id: leadId,
      fields: {
        STATUS_ID: 'NEW',
        ASSIGNED_BY_ID: ccManagerBitrixId
      }
    });
    debugLog(`üì° –û—Ç–≤–µ—Ç Bitrix (crm.lead.update): ${JSON.stringify(updateResp)}`);

    const taskResp = callBitrixMethod('tasks.task.add', {
  fields: {
    TITLE: `–ü–æ–≤—Ç–æ—Ä–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ª–∏–¥ #${leadId}`,
    DESCRIPTION: `–õ–∏–¥ –±—ã–ª –≤–æ–∑–≤—Ä–∞—â—ë–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º ${returnerName}. –ü—Ä–∏—á–∏–Ω–∞: ${reason}`,
    RESPONSIBLE_ID: ccManagerBitrixId,
    UF_CRM_TASK: [`L_${leadId}`]
  }
});
debugLog(`üìù –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: ${JSON.stringify(taskResp)}`);


    // üîπ –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    const commentResp = callBitrixMethod('crm.timeline.comment.add', {
      fields: {
        ENTITY_ID: leadId,
        ENTITY_TYPE: 'LEAD',
        COMMENT: `–õ–∏–¥ –≤–æ–∑–≤—Ä–∞—â—ë–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º ${returnerName}. –ü—Ä–∏—á–∏–Ω–∞: ${reason}`
      }
    });
    debugLog(`üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω: ${JSON.stringify(commentResp)}`);

    // üîπ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (ccManagerTelegramId) {
      const leadLink = `https://arkhitek.bitrix24.ru/crm/lead/details/${leadId}/`;
      const msg = `üì© –í–∞–º –≤–æ–∑–≤—Ä–∞—â—ë–Ω –ª–∏–¥ #${leadId}\nüë§ –í–µ—Ä–Ω—É–ª: ${returnerName}\nüìÑ –ü—Ä–∏—á–∏–Ω–∞: ${reason}\nüîó ${leadLink}`;
      sendMessage(ccManagerTelegramId, msg);
    } else {
      debugLog(`‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω Telegram ID —É ${ccManagerName}`);
    }

    // üîπ –õ–æ–≥ –≤–æ–∑–≤—Ä–∞—Ç–∞
    sheetReturns.appendRow([
      leadId,
      `https://arkhitek.bitrix24.ru/crm/lead/details/${leadId}/`,
      ccManagerName,
      returnerName,
      ccManagerName,
      reason,
      new Date()
    ]);

    debugLog(`‚úÖ –õ–∏–¥ —É—Å–ø–µ—à–Ω–æ –≤–æ–∑–≤—Ä–∞—â—ë–Ω. –õ–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω.`);


  } catch (e) {
    sheetLog.appendRow([new Date(), `‚ùå –û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –ª–∏–¥–∞ ${leadId}: ${e.toString()}`]);
    return false;
  }

  return true;
}
